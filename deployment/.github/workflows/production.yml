env:
  IMAGE_NAME: phomem-cosim
  REGISTRY: registry.hub.docker.com
jobs:
  build:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Registry
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.REGISTRY_PASSWORD }}
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
    - id: meta
      name: Extract metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags:
        - type=ref,event=branch
        - type=ref,event=pr
        - type=semver,pattern={{version}}
        - type=semver,pattern={{major}}.{{minor}}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: .
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
  deploy:
    environment: production
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Configure kubectl
      uses: azure/k8s-set-context@v3
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
        method: kubeconfig
    - name: Deploy to Kubernetes
      run: "\n                        sed -i 's|IMAGE_TAG|${{ github.sha }}|g' k8s/deployment.yaml\n\
        \                        kubectl apply -f k8s/\n                        kubectl\
        \ rollout status deployment/phomem-cosim\n                        "
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run tests
      run: python -m pytest tests/ -v --cov=phomem
    - name: Security scan
      run: pip install bandit && bandit -r phomem/
name: Production Deployment Pipeline
'on':
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
    tags:
    - v*
