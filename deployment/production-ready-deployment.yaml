# Production-Ready Kubernetes Deployment for PhoMem-CoSim
# Autonomous SDLC v4.0 - Enterprise Grade Configuration

apiVersion: v1
kind: Namespace
metadata:
  name: phomem-production
  labels:
    app: phomem-cosim
    environment: production
    version: v1.0.0

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: phomem-config
  namespace: phomem-production
data:
  phomem.yaml: |
    # PhoMem-CoSim Production Configuration
    
    # Application Settings
    app:
      name: "PhoMem-CoSim"
      version: "1.0.0"
      environment: "production"
      debug: false
      
    # Simulation Engine Configuration
    simulation:
      max_iterations: 10000
      convergence_tolerance: 1e-6
      time_step: 1e-9
      save_interval: 1000
      optical_solver: "BPM"
      thermal_solver: "FEM"
      electrical_solver: "SPICE"
      coupling: "weak"
      
    # Device Configuration
    devices:
      photonic:
        wavelength: 1550e-9
        loss_db_cm: 0.5
        phase_shifter_type: "thermal"
        power_per_pi: 20e-3
        
      memristive:
        device_type: "pcm_mushroom"
        material: "GST225"
        switching_energy: 100e-12
        retention_time: 1000000
        temperature: 300
        
    # Network Configuration
    network:
      input_size: 4
      hidden_sizes: [16, 8]
      output_size: 2
      nonlinearity: "relu"
      
    # Performance Settings
    performance:
      max_workers: 8
      cache_size: 512
      memory_limit_gb: 8
      
    # Security Settings
    security:
      max_file_size_mb: 100
      allowed_extensions: [".py", ".json", ".yaml", ".txt", ".md"]
      enable_validation: true
      
    # Monitoring Configuration
    monitoring:
      enabled: true
      metrics_port: 9090
      health_check_interval: 30
      log_level: "INFO"
      
    # Internationalization
    i18n:
      default_language: "en"
      supported_languages: ["en", "es", "fr", "de", "ja", "zh"]
      
    # Compliance Settings
    compliance:
      data_retention_days: 365
      enable_gdpr: true
      enable_ccpa: true
      privacy_by_design: true

---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: phomem-secrets
  namespace: phomem-production
type: Opaque
data:
  # Base64 encoded secrets (replace with actual values)
  database_password: cGhvbWVtLXNlY3VyZS1wYXNzd29yZA==
  api_key: YWJjZGVmZ2hpams=
  encryption_key: bXktc2VjdXJlLWVuY3J5cHRpb24ta2V5

---
# PersistentVolume for data storage
apiVersion: v1
kind: PersistentVolume
metadata:
  name: phomem-data-pv
  namespace: phomem-production
spec:
  capacity:
    storage: 50Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: fast-ssd
  hostPath:
    path: /data/phomem-production

---
# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: phomem-data-pvc
  namespace: phomem-production
spec:
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
# Main Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phomem-cosim
  namespace: phomem-production
  labels:
    app: phomem-cosim
    component: main
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: phomem-cosim
      component: main
  template:
    metadata:
      labels:
        app: phomem-cosim
        component: main
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: phomem-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: phomem-cosim
        image: terragonlabs/phomem-cosim:v1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: PHOMEM_ENVIRONMENT
          value: "production"
        - name: PHOMEM_LOG_LEVEL
          value: "INFO"
        - name: PYTHONPATH
          value: "/app"
        envFrom:
        - configMapRef:
            name: phomem-config
        - secretRef:
            name: phomem-secrets
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: data-volume
          mountPath: /data
        - name: temp-volume
          mountPath: /tmp
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config-volume
        configMap:
          name: phomem-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: phomem-data-pvc
      - name: temp-volume
        emptyDir:
          sizeLimit: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - phomem-cosim
              topologyKey: kubernetes.io/hostname

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: phomem-service-account
  namespace: phomem-production
  labels:
    app: phomem-cosim

---
# RBAC Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: phomem-production
  name: phomem-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]

---
# RBAC Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: phomem-role-binding
  namespace: phomem-production
subjects:
- kind: ServiceAccount
  name: phomem-service-account
  namespace: phomem-production
roleRef:
  kind: Role
  name: phomem-role
  apiGroup: rbac.authorization.k8s.io

---
# Main Service
apiVersion: v1
kind: Service
metadata:
  name: phomem-cosim-service
  namespace: phomem-production
  labels:
    app: phomem-cosim
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
  type: LoadBalancer
  selector:
    app: phomem-cosim
    component: main
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: phomem-cosim-hpa
  namespace: phomem-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: phomem-cosim
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: phomem-network-policy
  namespace: phomem-production
spec:
  podSelector:
    matchLabels:
      app: phomem-cosim
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: phomem-pdb
  namespace: phomem-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: phomem-cosim
      component: main

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phomem-ingress
  namespace: phomem-production
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - phomem.terragonlabs.com
    secretName: phomem-tls-secret
  rules:
  - host: phomem.terragonlabs.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: phomem-cosim-service
            port:
              number: 80

---
# ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: phomem-service-monitor
  namespace: phomem-production
  labels:
    app: phomem-cosim
spec:
  selector:
    matchLabels:
      app: phomem-cosim
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
  namespaceSelector:
    matchNames:
    - phomem-production